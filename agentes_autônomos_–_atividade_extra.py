# -*- coding: utf-8 -*-
"""Agentes Autônomos – Atividade Extra.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SyV2P95tmfFATNnD8-a8UMb5IwDyyYTP

# Task
Criar um arquivo de amostra chamado "creditcard_sample.csv" contendo as primeiras 50.000 linhas do arquivo "Kaggle - Credit Card Fraud.zip" para análise exploratória inicial.

## Carregar os dados

### Subtask:
Carregar o arquivo `creditcard_sample.csv` em um DataFrame pandas.

**Reasoning**:
The subtask requires loading the first 50,000 rows of the CSV file into a pandas DataFrame. This involves importing pandas and using `pd.read_csv` with the `nrows` parameter.
"""

import pandas as pd

df = pd.read_csv('/content/creditcard.csv', nrows=50000)

"""## Explorar os dados iniciais

### Subtask:
Exibir as primeiras linhas do DataFrame, verificar os tipos de dados e identificar a presença de valores ausentes.

**Reasoning**:
Display the first few rows, check data types, and check for missing values in the DataFrame.
"""

display(df.head())
display(df.dtypes)
display(df.isnull().sum())

"""## Análise descritiva das variáveis numéricas

### Subtask:
Calcular e exibir estatísticas descritivas para as colunas numéricas, como média, mediana, desvio padrão, mínimo e máximo.

**Reasoning**:
Calculate and display descriptive statistics for all numerical columns in the DataFrame.
"""

display(df.describe())

"""## Análise da variável alvo (class)

### Subtask:
Verificar a distribuição da variável 'Class' (fraude vs. não fraude) e visualizar essa distribuição.

**Reasoning**:
Count the occurrences of each class in the 'Class' column and then visualize the distribution using a bar plot.
"""

import matplotlib.pyplot as plt

class_counts = df['Class'].value_counts()

plt.figure(figsize=(6, 4))
plt.bar(class_counts.index, class_counts.values, color=['skyblue', 'salmon'])
plt.title('Distribuição da Variável Class (Fraude vs. Não Fraude)')
plt.xlabel('Classe (0: Não Fraude, 1: Fraude)')
plt.ylabel('Contagem')
plt.xticks([0, 1], ['Não Fraude', 'Fraude'])
plt.show()

"""## Visualizar a distribuição das variáveis

### Subtask:
Gerar histogramas ou gráficos de distribuição para algumas das variáveis para entender sua forma e dispersão.

**Reasoning**:
Create histograms for selected variables to understand their distributions.
"""

import matplotlib.pyplot as plt

selected_vars = ['Amount', 'V1', 'V2', 'V3', 'V4', 'V5']
n_vars = len(selected_vars)
n_cols = 2
n_rows = (n_vars + n_cols - 1) // n_cols

fig, axes = plt.subplots(n_rows, n_cols, figsize=(12, n_rows * 4))
axes = axes.flatten()

for i, var in enumerate(selected_vars):
    axes[i].hist(df[var], bins=50, color='skyblue', edgecolor='black')
    axes[i].set_title(f'Distribuição de {var}')
    axes[i].set_xlabel('Valor da Variável')
    axes[i].set_ylabel('Frequência')

for j in range(i + 1, len(axes)):
    fig.delaxes(axes[j])

plt.tight_layout()
plt.show()

"""## Análise de correlação

### Subtask:
Calcular e visualizar a matriz de correlação entre as variáveis numéricas para identificar relacionamentos.

**Reasoning**:
Calculate the correlation matrix and visualize it using a heatmap.
"""

import seaborn as sns
import matplotlib.pyplot as plt

correlation_matrix = df.corr()

plt.figure(figsize=(15, 12))
sns.heatmap(correlation_matrix, cmap='coolwarm', annot=False)
plt.title('Matriz de Correlação das Variáveis Numéricas')
plt.show()

"""## Explorar a relação entre 'time', 'amount' e 'class'

### Subtask:
Investigar como as variáveis 'Time' e 'Amount' se relacionam com a variável 'Class' (fraude).

**Reasoning**:
Create scatter plots to visualize the relationship between 'Time' and 'Amount' for both fraudulent and non-fraudulent transactions, as specified in the instructions.
"""

import matplotlib.pyplot as plt

fraud_df = df[df['Class'] == 1]
non_fraud_df = df[df['Class'] == 0]

plt.figure(figsize=(12, 5))

plt.subplot(1, 2, 1)
plt.scatter(non_fraud_df['Time'], non_fraud_df['Amount'], alpha=0.5, color='skyblue', s=1)
plt.title('Non-Fraudulent Transactions (Class 0)')
plt.xlabel('Time')
plt.ylabel('Amount')

plt.subplot(1, 2, 2)
plt.scatter(fraud_df['Time'], fraud_df['Amount'], alpha=0.5, color='salmon', s=1)
plt.title('Fraudulent Transactions (Class 1)')
plt.xlabel('Time')
plt.ylabel('Amount')

plt.tight_layout()
plt.show()

"""## Conclusões iniciais

### Subtask:
Resumir as principais descobertas da análise exploratória inicial.

**Reasoning**:
Summarize the key findings from the initial exploratory data analysis based on the previous subtasks.
"""

summary = """
Resumo da Análise Exploratória Inicial:

Com base na análise das primeiras 50.000 linhas do conjunto de dados de cartão de crédito, observamos os seguintes pontos principais:

1.  **Limpeza e Completude dos Dados:** O conjunto de dados amostrado apresenta alta qualidade em termos de completude, sem a detecção de valores ausentes em nenhuma das colunas. Os tipos de dados são predominantemente numéricos (float64), com as variáveis 'Time' e 'Class' como inteiras (int64), o que é apropriado para as análises subsequentes.

2.  **Distribuição da Variável Alvo ('Class'):** A variável alvo 'Class' demonstra um desequilíbrio extremo. A vasta maioria das transações é classificada como não fraude (Classe 0), enquanto um número muito pequeno representa transações fraudulentas (Classe 1). Essa assimetria na distribuição da classe é um aspecto crucial a ser considerado em futuras etapas de modelagem, como na escolha de métricas de avaliação e técnicas de reamostragem.

3.  **Distribuição das Variáveis (Histogramas):** Os histogramas de variáveis selecionadas (V1 a V5 e Amount) mostram diferentes padrões de distribuição. As variáveis V parecem ter distribuições centradas próximas a zero, enquanto a variável 'Amount' mostra uma distribuição altamente assimétrica, com a maioria das transações tendo valores baixos.

4.  **Análise de Correlação:** A matriz de correlação revela alguns relacionamentos entre as variáveis. Notavelmente, algumas das variáveis 'V' (como V3, V10, V12, V14, V16, V17) apresentam correlações negativas mais fortes com a variável 'Class', enquanto outras (como V2 e V4) mostram correlações positivas. A variável 'Amount' e 'Time' apresentam correlações muito baixas com a 'Class' na amostra.

5.  **Relação entre 'Time', 'Amount' e 'Class':** Os gráficos de dispersão de 'Time' vs 'Amount' separados por classe confirmam visualmente o desequilíbrio. As transações não fraudulentas estão densamente espalhadas ao longo do tempo e valores de 'Amount', enquanto as transações fraudulentas são escassas e não exibem um padrão temporal ou de valor claro dentro desta amostra inicial, embora pareçam ocorrer em diferentes momentos e com diversos valores de 'Amount'.

Em resumo, a análise exploratória inicial destacou a limpeza dos dados, o desequilíbrio significativo na variável alvo e forneceu insights preliminares sobre as distribuições variáveis e as correlações, as quais serão valiosas para a construção de um modelo de detecção de fraudes eficaz.
"""

print(summary)

"""## Refinar e expandir a análise

### Subtask:
Com base nas perguntas do usuário e nas descobertas iniciais, aprofundar a análise e gerar visualizações adicionais conforme necessário.

**Reasoning**:
Create a histogram for the 'Amount' of fraudulent transactions to visualize its distribution, as requested in step 1 of the instructions.
"""

import matplotlib.pyplot as plt
import seaborn as sns

plt.figure(figsize=(8, 5))
sns.histplot(fraud_df['Amount'], bins=50, color='salmon', edgecolor='black', kde=True)
plt.title('Distribution of Amount for Fraudulent Transactions')
plt.xlabel('Amount')
plt.ylabel('Frequency')
plt.show()

"""**Reasoning**:
Create a box plot to compare the distribution of 'Amount' for fraudulent and non-fraudulent transactions, as requested in step 2 of the instructions.


"""

import matplotlib.pyplot as plt
import seaborn as sns

plt.figure(figsize=(8, 6))
sns.boxplot(x='Class', y='Amount', data=df, palette='viridis')
plt.title('Distribution of Amount by Class (Fraud vs. Non-Fraud)')
plt.xlabel('Class (0: Non-Fraud, 1: Fraud)')
plt.ylabel('Amount')
plt.xticks([0, 1], ['Non-Fraud', 'Fraud'])
plt.yscale('log') # Use a log scale for better visualization due to the wide range of amounts
plt.show()

"""**Reasoning**:
Create box plots for selected 'V' variables that showed relatively higher correlations with 'Class' to compare distributions between fraudulent and non-fraudulent transactions, as requested in step 3 of the instructions.


"""

import matplotlib.pyplot as plt
import seaborn as sns

selected_v_vars = ['V3', 'V10', 'V12', 'V14', 'V17', 'V2', 'V4']
n_vars = len(selected_v_vars)
n_cols = 3
n_rows = (n_vars + n_cols - 1) // n_cols

fig, axes = plt.subplots(n_rows, n_cols, figsize=(15, n_rows * 5))
axes = axes.flatten()

for i, var in enumerate(selected_v_vars):
    sns.boxplot(x='Class', y=var, data=df, ax=axes[i], palette='viridis')
    axes[i].set_title(f'Distribution of {var} by Class')
    axes[i].set_xlabel('Class (0: Non-Fraud, 1: Fraud)')
    axes[i].set_ylabel(var)
    axes[i].set_xticks([0, 1], ['Non-Fraud', 'Fraud'])

for j in range(i + 1, len(axes)):
    fig.delaxes(axes[j])

plt.tight_layout()
plt.show()

"""**Reasoning**:
Based on the correlation matrix, some 'V' variables show relatively higher correlations with 'Class'. Scatter plots between pairs of these highly correlated 'V' variables, separated by class, could reveal distinct patterns for fraudulent transactions. This addresses step 4 of the instructions by generating additional insightful visualizations. I will select a few pairs with notable correlation with 'Class' and visualize their relationship.


"""

import matplotlib.pyplot as plt
import seaborn as sns

# Select pairs of 'V' variables with relatively high correlation to 'Class'
# Based on the correlation matrix, V17 and V14, V12, V10, V3 show strong negative correlation.
# V2 and V4 show positive correlation. Let's visualize some pairs.
selected_pairs = [('V17', 'V14'), ('V12', 'V10'), ('V3', 'V2'), ('V4', 'V17')]

n_pairs = len(selected_pairs)
n_cols = 2
n_rows = (n_pairs + n_cols - 1) // n_cols

fig, axes = plt.subplots(n_rows, n_cols, figsize=(15, n_rows * 6))
axes = axes.flatten()

for i, (var1, var2) in enumerate(selected_pairs):
    sns.scatterplot(x=var1, y=var2, hue='Class', data=df, ax=axes[i], alpha=0.6, s=5, palette='viridis', legend='full')
    axes[i].set_title(f'Scatter plot of {var1} vs {var2} by Class')
    axes[i].set_xlabel(var1)
    axes[i].set_ylabel(var2)

for j in range(i + 1, len(axes)):
    fig.delaxes(axes[j])

plt.tight_layout()
plt.show()

"""## Conclusões iniciais

### Subtask:
Resumir as principais descobertas da análise exploratória inicial.

**Reasoning**:
Summarize the key findings from the initial exploratory data analysis based on the previous subtasks.
"""

summary = """
Resumo da Análise Exploratória Inicial:

Com base na análise das primeiras 50.000 linhas do conjunto de dados de cartão de crédito, observamos os seguintes pontos principais:

1.  **Limpeza e Completude dos Dados:** O conjunto de dados amostrado apresenta alta qualidade em termos de completude, sem a detecção de valores ausentes em nenhuma das colunas. Os tipos de dados são predominantemente numéricos (float64), com as variáveis 'Time' e 'Class' como inteiras (int64), o que é apropriado para as análises subsequentes.

2.  **Distribuição da Variável Alvo ('Class'):** A variável alvo 'Class' demonstra um desequilíbrio extremo. A vasta maioria das transações é classificada como não fraude (Classe 0), enquanto um número muito pequeno representa transações fraudulentas (Classe 1). Essa assimetria na distribuição da classe é um aspecto crucial a ser considerado em futuras etapas de modelagem, como na escolha de métricas de avaliação e técnicas de reamostragem.

3.  **Distribuição das Variáveis (Histogramas):** Os histogramas de variáveis selecionadas (V1 a V5 e Amount) mostram diferentes padrões de distribuição. As variáveis V parecem ter distribuições centradas próximas a zero, enquanto a variável 'Amount' mostra uma distribuição altamente assimétrica, com a maioria das transações tendo valores baixos.

4.  **Análise de Correlação:** A matriz de correlação revela alguns relacionamentos entre as variáveis. Notavelmente, algumas das variáveis 'V' (como V3, V10, V12, V14, V16, V17) apresentam correlações negativas mais fortes com a variável 'Class', enquanto outras (como V2 e V4) mostram correlações positivas. A variável 'Amount' e 'Time' apresentam correlações muito baixas com a 'Class' na amostra.

5.  **Relação entre 'Time', 'Amount' e 'Class':** Os gráficos de dispersão de 'Time' vs 'Amount' separados por classe confirmam visualmente o desequilíbrio. As transações não fraudulentas estão densamente espalhadas ao longo do tempo e valores de 'Amount', enquanto as transações fraudulentas são escassas e não exibem um padrão temporal ou de valor claro dentro desta amostra inicial, embora pareçam ocorrer em diferentes momentos e com diversos valores de 'Amount'.

Em resumo, a análise exploratória inicial destacou a limpeza dos dados, o desequilíbrio significativo na variável alvo e forneceu insights preliminares sobre as distribuições variáveis e as correlações, as quais serão valiosas para a construção de um modelo de detecção de fraudes eficaz.
"""

print(summary)

"""## Summary:

### Data Analysis Key Findings

*   The sampled dataset of 50,000 rows is clean with no missing values. Most columns are `float64`, while 'Time' and 'Class' are `int64`.
*   The 'Class' variable shows a severe imbalance, with a significantly higher number of non-fraudulent transactions (Class 0) compared to fraudulent ones (Class 1).
*   Histograms indicate that 'Amount' is highly right-skewed, with most transactions having low values. 'V' variables appear to be centered around zero.
*   The correlation matrix shows that some 'V' variables (e.g., V3, V10, V12, V14, V16, V17) have stronger negative correlations with 'Class', while others (V2, V4) have positive correlations. 'Amount' and 'Time' have very low correlations with 'Class' in this sample.
*   Scatter plots of 'Time' vs 'Amount' reveal that fraudulent transactions are sparse and do not show clear temporal or amount patterns within this sample, contrasting with the dense distribution of non-fraudulent transactions.
*   A closer look at the 'Amount' distribution for fraudulent transactions shows that most fraud involves smaller amounts, with a few outliers.
*   Box plots of selected 'V' variables demonstrate clear differences in distributions between fraudulent and non-fraudulent transactions, highlighting their potential importance for classification.
*   Scatter plots of pairs of correlated 'V' variables show distinct clusters or patterns for fraudulent transactions, suggesting that combinations of these features can help differentiate classes.

### Insights or Next Steps

*   The significant class imbalance requires careful consideration in model selection and evaluation (e.g., using precision, recall, F1-score instead of accuracy) and potentially employing techniques like oversampling or undersampling.
*   The distinct distributions and correlations of certain 'V' variables with the 'Class' variable suggest that these features are highly informative and should be prioritized in feature selection and model building.

## Summary:

### Data Analysis Key Findings

* The sampled dataset of 50,000 rows is clean with no missing values. Most columns are `float64`, while 'Time' and 'Class' are `int64`.
* The 'Class' variable shows a severe imbalance, with a significantly higher number of non-fraudulent transactions (Class 0) compared to fraudulent ones (Class 1).
* Histograms indicate that 'Amount' is highly right-skewed, with most transactions having low values. 'V' variables appear to be centered around zero.
* The correlation matrix shows that some 'V' variables (e.g., V3, V10, V12, V14, V16, V17) have stronger negative correlations with 'Class', while others (V2, V4) have positive correlations. 'Amount' and 'Time' have very low correlations with 'Class' in this sample.
* Scatter plots of 'Time' vs 'Amount' reveal that fraudulent transactions are sparse and do not show clear temporal or amount patterns within this sample, contrasting with the dense distribution of non-fraudulent transactions.
* A closer look at the 'Amount' distribution for fraudulent transactions shows that most fraud involves smaller amounts, with a few outliers.
* Box plots of selected 'V' variables demonstrate clear differences in distributions between fraudulent and non-fraudulent transactions, highlighting their potential importance for classification.
* Scatter plots of pairs of correlated 'V' variables show distinct clusters or patterns for fraudulent transactions, suggesting that combinations of these features can help differentiate classes.

### Insights or Next Steps

* The significant class imbalance requires careful consideration in model selection and evaluation (e.g., using precision, recall, F1-score instead of accuracy) and potentially employing techniques like oversampling or undersampling.
* The distinct distributions and correlations of certain 'V' variables with the 'Class' variable suggest that these features are highly informative and should be prioritized in feature selection and model building.
"""



"""# Task
Generate a treated version of the "creditcard_sample.csv" file, addressing outliers in the 'Amount' column and selecting relevant features based on correlation with the 'Class' column. Save the treated data to a new CSV file.

## Tratamento de outliers na variável 'amount'

### Subtask:
Identificar e tratar outliers na coluna 'Amount' usando um método apropriado (por exemplo, usando o método do IQR).

**Reasoning**:
Calculate the IQR and define the outlier bounds for the 'Amount' column, then filter the DataFrame to remove rows with outliers based on these bounds.
"""

Q1 = df['Amount'].quantile(0.25)
Q3 = df['Amount'].quantile(0.75)
IQR = Q3 - Q1

lower_bound = Q1 - 1.5 * IQR
upper_bound = Q3 + 1.5 * IQR

df_tratado = df[(df['Amount'] >= lower_bound) & (df['Amount'] <= upper_bound)].copy()

print(f"Original DataFrame shape: {df.shape}")
print(f"DataFrame shape after removing outliers in 'Amount': {df_tratado.shape}")

"""## Seleção de features

### Subtask:
Selecionar as variáveis mais relevantes com base na análise de correlação com a variável 'Class' e nas visualizações geradas anteriormente.

**Reasoning**:
Identify and select the relevant columns based on correlation analysis and visualizations, create a new DataFrame with these selected features, and display its head and info to verify the selection.
"""

# Columns to exclude: 'Time' and 'V' columns with low correlation to 'Class'
# Based on correlation matrix and box plots, 'Time' and some 'V' variables have low correlation.
# Variables V1, V5, V6, V8, V9, V11, V13, V15, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28
# seem to have relatively lower correlation or less distinct separation in box plots compared to others.
# Let's keep 'Amount' and the 'V' variables with higher correlation and distinct distributions (V2, V3, V4, V7, V10, V12, V14, V16, V17).
# We also need to keep the 'Class' column.

cols_to_keep = ['Class', 'Amount', 'V2', 'V3', 'V4', 'V7', 'V10', 'V12', 'V14', 'V16', 'V17']

# Create the new DataFrame with selected features
df_features_selecionadas = df_tratado[cols_to_keep].copy()

# Display the first few rows and info of the new DataFrame
display(df_features_selecionadas.head())
display(df_features_selecionadas.info())

"""## Gerar arquivo tratado

### Subtask:
Criar um novo DataFrame com os dados após o tratamento de outliers e a seleção de features, e salvá-lo em um novo arquivo CSV.

**Reasoning**:
Save the treated and feature-selected DataFrame to a new CSV file without the index.
"""

df_features_selecionadas.to_csv('creditcard_treated_sample.csv', index=False)

"""## Summary:

### Data Analysis Key Findings

*   Outliers in the 'Amount' column were identified and removed using the IQR method, resulting in a treated dataset of 44,797 rows, down from the original 50,000 rows.
*   Feature selection was performed based on correlation with the 'Class' variable, keeping 'Class', 'Amount', and the 'V' variables (V2, V3, V4, V7, V10, V12, V14, V16, V17) which showed higher correlation or distinct distributions.
*   The treated data with selected features was successfully saved to a new CSV file named `creditcard_treated_sample.csv`.

### Insights or Next Steps

*   The treated and feature-selected dataset is now prepared for subsequent machine learning model training and evaluation.
*   Further investigation into the distribution and relationships of the selected features could provide more insights for model development.

"""